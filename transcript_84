
Search our transcripts by guest or keyword
COMPANY
Careers
Blog
Shows
Sponsors
Newsletter
About Us
Sitemap
LEGAL
Disclaimer
Privacy Policy
Terms and Conditions
SOCIAL
LinkedIn
Twitter
® 2022 Colossus, LLC. All rights reserved.
Released July 1st, 2021
Founder's Field Guide
Michael Mayer - Business Boss Battles
Michael is the founder and CEO of Bottomless. We cover the problems founders face when building something unique, how to avoid solving bottlenecks that don’t yet exist, and how to iterate through issues before scaling.

00:00:00
01:01:48
Introduction
Patrick: [00:02:12] My guest today, Michael Mayer, is the founder and CEO of Bottomless, a company that automatically replenishes your coffee supply, where I'm both an excited investor and customer. Today's conversation is about tactical lessons Michael has learned while building the business. We talk about identifying an addressable problem, how to avoid solving for bottlenecks that don't yet exist and how to iterate through problems before scaling. As yet another example of a self-taught entrepreneur. It's inspiring to hear Michael's mindset for problem solving. I hope you enjoy my conversation with Michael.

Problem #1: Finding the Problem to Solve
Patrick: [00:02:44] So Michael, this is going to be a pretty unique version of this series that we call Founders Field Guide for two reasons. One, you've been on the show before, so we're going to make sure to cover ground that we didn't cover the first time and people can go listen to that episode if they want. It's awesome. And second, because I have the pleasure of knowing you and Liana and the team at Bottomless really well, I'm an investor in the business. I've known you guys a long time. I'm a user, et cetera. So we thought brainstorming, that the fun thing to do here is a new format that goes through five, maybe six major scaling challenges that you've had as a business, sort of the absolute worst things that you've had to deal with. What the problems were and how you overcame them because I think my experience with businesses of your type is that, that's all they ever are, is just a series of these, what seemed like insurmountable challenges that then you figure out and you move on to the next one. So we just thought this would be a neat format to try out, look forward to doing with you. I'll kick it off by asking about the most nascent problem, which was, how you got into this problem space in the first place as a single founder and narrowed the scope of the problem that interested you into something that actually could be tackled.

Michael: [00:03:53] Yeah, I'm excited to be here Patrick and excited to do the episode. And I'm glad you asked about that first, because it doesn't really seem on the surface like a problem, trying to come up with exactly what you're going to do. In reality, Liana and I came up with this idea totally, independently from coffee, from smart subscriptions and totally independently from what we were actually doing. We sort of had realized that replenishment of consumables was broken broadly and that would have been sort of an impossible space to tackle. And we sort of realized, "Hey, we need to figure out something that we can actually do ourselves." I happened to work in restaurants in college and I'd become very much aware of how they do resupply, which is kind of absurd. They have somebody walk through every single item in the restaurant and put it on like a little piece of paper every single day and compare it to a par value and reorder every day. So I knew that there were solutions to this problem out there, even though they didn't work particularly well. Restaurants still running out of stuff all the time. And then ourselves, we would have problems all the time at home in terms of running out of stuff. And those sort of realizations converged in an understanding that resupply in general was broken, but it would have been almost impossible to address the problem in that wide of a scope. How are you going to make a product that helps restaurants resupply the restaurant, helps households resupply their household, helps industrial companies resupply products? It almost is like an impossibly broad mission.

So first of all, we had to figure out, "Okay, how can you even resupply people appropriately? How can we make a product that actually works?" We went through a lot of possible form factors, like computer vision, really smart user inputs to help manage the inventory. Somebody walks around their house with an iPad, clicking a bunch of buttons saying, "Oh, I have like three bars of soap." Some really, really bad ideas essentially. And one day, I was weighing something at home. I think it was cat food or something and just realized, "Okay. Hey, this is actually how much cat food I have, the weight is representative." And sort of stumbled on this idea of using a scale. With that data, maybe you actually could order for people. So we had to decide next, who the first customer was. It was kind of a difficult decision honestly, because if you go after businesses, you can really expand the amount of money you make off the business fairly fast. The recurring revenue per customer is quite large. And so that seemed initially like a very good idea, but then we sort of took a step back and we thought, "Okay, I don't know how to make hardware. I don't know how to do any of these things. And then I'm going to have to make a system that fully replaces somebody's almost full-time job." So that was one problem. The second problem was for a restaurant, unless you solve the whole problem. And I keep saying restaurants because I was in my head at the time, but it's sort of applicable to a lot of things. Unless you solve the whole problem, if it's somebody's job already the marginal costs of just marking one more thing is fairly small. Somebody already has a clipboard. They're already going around. They're already checking things off. And so unless you solve the whole problem, they're still going to be doing inventory every day. Whereas for a household, at least for us, nobody was explicitly in charge of restocking. Maybe somebody does the weekly grocery shopping, but that's not going to cover all your bases and every household has a number of items that are stocked from various suppliers. So we thought, "Okay, well this is an actual problem that you can solve for people." If you pick a specific product that people happen to really care about, picking coffee was fairly unsophisticated. I just happened to know that we wanted fancy coffee and we're always out of stock of fancy coffee, so then work backwards.

Consumer first and then to single product next and then to coffee specifically. I thought about it for a little while and thought, "Okay, well every step of this process to build a first product is reasonable." And thought, "Hey, we can build this. Why does this not exist? Are we going to waste a lot of time doing something, where there's some obvious reason why this is going to fail?" And we couldn't come up with one, honestly. And initially it was almost like a test, proving it to ourselves. It was like hypothesis testing. I didn't think it was going to work and I made a couple of these scales and gave it to some friends. And I still viscerally remember the time when I saw their weight graph, jump up. For some reason, I hadn't intuitively understood that, that's what it would look like. And I remember it was like a blue dot and that was like a Eureka moment. But anyway, that's sort of how we narrowed it down conceptually. And I honestly think this was the biggest problem in our entire history. Since, we're making an episode about problems. One thing I've realized while doing a company is that, if the outcome of where you're going to get as a startup is the end of a vector. The idea is the direction of the vector. The magnitude is how hard you work, how lucky you get, the partners that you have. The people that help you build the company but that actual direction is like half the battle. So we really spent a lot of time thinking about that and trying to figure out something that A, we could do and B, could still be [inaudible] .

Patrick: [00:08:42] Well let's say, you were just dropped on a new business island somewhere and had to kind of go through that process again. You had to start over, you weren't allowed to do restocking as the idea space, some new massive idea space with lots of applications. What do you think you would do better the second time than you did the first time in that process of whittling it down?

Michael: [00:09:01] This is a common trope that I've heard in interviews with other entrepreneurs, but I would definitely start with distribution first and work backwards to the concept. One of the things about our business is that, it works phenomenally well. Depending on the metric you use, five times better than a subscription, but the distribution isn't an obvious. We still have to go out there and get customers and that's a constant challenge. I can conceive of many business ideas, you actually come up with an epiphany related to a distribution trick rather than a product first. And then you work backwards to a product that could fulfill that distribution trick. And I would probably do that differently, for sure.

Patrick: [00:09:37] Fascinating idea. And I love just the whole process of restocking as the step one problem, all the way down to consumer premium coffee as the first instantiation of the technology. What are the most notable things you learned about, whether it's computer vision or some other method of, I guess, data legibility? Is that what you would call it? Figuring out what there was and what there wasn't in someone's stock. Is there any interesting lessons you learned there other than the scale as you pursued the idea?

Michael: [00:10:08] The concept of legibility is really core to the idea here. And I had read a book maybe a few years before coming up with the idea called, Seeing like a State, which is all about how states or governments or whatever, their entire function is making legibility among their population, so that they can take actions on things that need to be done at government scale. And governments essentially invented all sorts of technologies. Kings in like the 1700s, inventive ways of knowing how much wood was being chopped down. Recordkeeping technologies, essentially. So this was very similar. You'd have this concept of legibility and it became obvious to us, as we were thinking about how to solve this. The core problem of restocking is legibility. The reason why I'm always out of stuff in my home is that the seller who would be glad to send something to me, has no idea when to ship it and you can sign up for a subscription and they ship it every week and it just doesn't work. And so, if you can just make that legible, the demand legible, then you can actually make it work. But anyway, so other ways to make restocking legible. I talked about the inventory that they do at restaurants, where they go and they write literally on a clipboard. That's sort of like the most rudimentary form of tracking and legibility. We definitely did some minimal tests on computer vision in the home. And the problem is essentially, it's way too messy of an environment. You really can't get a good track on it. Or you can put the vision sensor somewhere where you're seeing things going in and out of the home, maybe in and out of the fridge. You could put a camera in like mounted. And we had all sorts of thought experiments related to this

The nice thing about weight, is that it's like ground truth. Imagine you have a vision sensor on somebody's door, if you miss one item coming out of the fridge, you're going to be permanently off by one and you're going to need to reconcile it eventually. You need to monitor the stock, not the flow. That's some insight that we came up with originally. There's lots of ways to monitor the flow, but monitoring the stock is hard unless you get a really clean source of data and vision doesn't really work very well for a number of reasons. For example, in coffee, in what we're doing right now, if you had a vision sensor on a coffee bag, you're still not going to be able to restock it because you don't really know how much coffee is in the bag. It's really, really hard until the back gets really crumpled. In certain bags, you can't even tell, they look full all the way until they're empty. So vision only works for items, where you can count the proportion of ideal stock in some way that it's obvious by looking at it. And then that's assuming that you don't leave your pasta bag on top of your coconut water or whatever. So we have done experiments ourselves on vision and essentially it doesn't work very well in a way that doesn't include users sort of like manual processing. Where you're actually sort of like moving stuff around in the fridge, so that some sort of camera can see things. And then at that point, people don't do it. You need something that's actually automated or people are going to stick with what they're already doing.

Problem #2: Building the Product
Patrick: [00:13:02] One of the things that we've talked about endlessly is, just the idea of user frictions and that for something like this, it's all about convenience. And you can go to extreme lengths to make sure users stay out of the process. You kind of want the user to never think about it and never have to do anything and just have the thing show up when they need it. And that's sort of the North Star here. It begs the question then on the second major problem that you faced, which was, okay weight is the right thing to measure. It's the right unit of legibility. How the hell are we going to then start capturing weight in a cost-effective manner? So we had to build a scale. Talk us through in some detail, what it was like to build a hardware prototype.

Michael: [00:13:40] The thing that's important to understand is, that I had never built any hardware whatsoever. I didn't even take a course, where I sort of done it in college or whatever. I barely knew what volts and current was. So it was quite a challenge, and I think the reason why I even had the confidence to do it, was that I had been a self-taught software developer. I got into software, by some college course where I had to do statistical programming. I did that and I just was blown away by how powerful it was. You could drop in libraries of open source software and you could use them and make it do magical things. It's totally free, permissionless. You could just make things with your finger, just from a couple of Google searches and looking at documentation.

It never really occurred to me as I was doing it, that hardware would be fundamentally different than software. I mean, it's obviously different in the sense that you need to actually make things with your hands, but the process of figuring out how to make it, it never really occurred to me that I should approach it differently than software. It obviously, wasn't that easy. It was extremely difficult. I kind of had bit off a little more than I could chew, but at that point I'd already quit my job and decided I was going to do it, so I had to figure it out. It was just a process of looking at a tutorial, making my own example and iterating on it until I had something that actually worked. It's sort of like a story of the power of the internet and self-education.

Once you sort of realize that you can do things that way, it doesn't really occur to you that you shouldn't apply that style to something else. And the interesting thing is, the hardware today, sort of still has a lot of the traces of that first initial prototype. It's changed a lot, but a lot of the core architecture of it hasn't changed.

Patrick: [00:15:20] Can you say a little bit more? I love V1s or V0s of these things. What literally did you do to make the first scale? Are you soldering stuff? Did you contract it out? Are you buying like 10 chips and trying them all? What was the literal steps in making that first scale work?

Michael: [00:15:36] Yeah, we certainly were not contracting with people because this was a totally bootstrapped endeavor in the beginning. And the idea of contracting with people, even for like a few thousand dollars was a little bit nerve wracking. So what did I actually do? So the first thing I did is, I bought a bunch of different [inaudible] functions. I just bought like 10 of them. I bought all the supplies that I'd seen in the various tutorials and examples that I'd seen online. So like wires and like a tool for cutting and multimeter, et cetera. And then I had to learn how to solder. I didn't know how to do that, and I remember burning myself a lot, but I sort of learned as I was doing it. So I bought a little bread board thing, which allows you to plug in wires and how to experiment with, okay, how does this actually work to make a light go on? And okay, well now I know how this bread board thing works. And look up the circuits for just a simple, low power thing that turns a light on and off, and then figure out how to program it to turn the light on. This is like a kids-

Patrick: [00:16:33] Science class, yeah.

Michael: [00:16:34] Summer camp or something, right? I was actually doing that. And I was like, okay, wow, I got this light to turn on and off. Now I know how to put code on this thing. And then, I thought, okay, well, how do I get it to communicate to us? And I distinctly remember when I made it go to sleep, it wouldn't go low power enough. And that was a tragedy. I had gotten this far and nothing that I did could make it go low power enough.

And I remember I got the documentation for the very core chip that we were using. And I still remember to this day that I was trying to figure it out and I was staring at this, and I was reading the documentation and randomly out of nowhere, Leanna just asking me like, "Hey, are you okay?" And I'm like, "Yeah. What?" And apparently I was just breathing so hard. My brain, you couldn't imagine smoke coming out of my ears, trying to understand this thing because if I couldn't figure this out, the whole idea was toast. The results I was getting, the thing would last for a month and who wants to recharge something every month just to restock their coffee? We had a target, but it had to be at least six months.

So it was all very similar to software engineering, where you're hacking and then you're getting the results. But the cycle times were a little bit slower and you don't burn your fingers when you're coding.

Patrick: [00:17:40] What amount of time, maybe not the very first scale, but once you got something that was acceptable for V1, how long would it take you to make one scale?

Michael: [00:17:48] Oh God, it was really bad. I remember I made a batch. We made a batch of five and it took all day. And at the time, we were sanding them and painting them because we thought that the finish was super important for some reason. And that actually took forever. Eventually we dropped that when we realized nobody cared because we would put so much time and effort into these scales. And the first ones, we were too scared to ship them. So we would actually drop them off and we would watch the people set them up to see if they would actually work and nobody cared. I had carefully painted this thing and I thought that it was beautiful, and they just threw it down on the counter and clicked the button and never looked at it again. So we stopped doing that.

It took a really long time. So that was actually, speaking of scaling problems, that was very difficult because if you need to personally do two to three hours of work per customer, it just becomes extremely difficult when you're also having to build out the platform, you're having to build out an e-commerce experience, an onboarding flow, work with vendors, et cetera. And so, that was one of the challenges that persisted for a few years in the beginning of the company, was how to actually make these efficiently enough.

Patrick: [00:18:56] What major lesson do you take from all that time, doing something very unique? That's a very unique story in the scheme of things.

Michael: [00:19:03] Well, certainly I touched on it before, which is inadvertent mentality that I had from being a self-taught software developer who was extremely powerful. While it seems like when you're doing this very silly, you can actually accomplish some very difficult things. In order to actually get the design that we had and eventually put on formalized, it would have been extremely difficult for us and we would have had to spend quite a bit of money. We have figured it all ourselves. And it was all just from this sort of iterative approach of seeing what the problems are measuring, making a new design. That's like the meta lesson, is that in the modern world you can almost figure out how to do anything unless you're inventing something totally new.

And one of the beautiful things about Bottom was, and the reason why we actually had the confidence to do it, is that everything we're doing is a mature technology. It's just stitched together in a different way. So the chips that we're using are from the smartphone supply chain, and so they're extremely cheap and mature. Weight sensors are obviously at a very high stage of maturity. And then the rest, sort of like the full stack web technologies, are all fairly mature at this point too. And so, it was a matter of stitching together all these things. So maybe it wouldn't be a different lesson if we were trying to invent some new biotech drug or something like that. But in terms of something that already exists, you can figure it out. Almost anything that already exists, you can figure it out.

Problem #3: Funding the Business
Patrick: [00:20:22] I love that lesson. Okay. So we've got the narrowing of the idea, and I'm struck by how important it was that you set yourself on a certain path so that you just insisted that you solved the scale problem in a certain way, because it had to fit that six month requirement or whatever. So interesting how the first problem informed the way you solve the second problem. That brings us to the interesting third problem, which now deviates a little bit from the product itself and is more about the company, and that's fundraising. So you use the word bootstrap earlier. How long were you just doing this on your own? At what stage did you decide, okay, we're ready to graduate, if you will, and start doing this with funds from investors? And what was that challenge like? Because I think it was really hard for you.

Michael: [00:21:04] We always saw the company as a series of proofs, sort of proving out risks. We saw it that way ourselves. We always intended to build a venture scale business. So the first question was, "Hey, does this concept even work?" We built these really janky prototypes and gave them to friends and family. Whoa, it actually works. We can buy online and it'll arrive. Then the next step was okay, this is just friends and family using it. We acquired 10 customers that we had never met using online ads that we had purchased ourselves. And to our surprise, these people actually used it more than our friends and family, and acquired 10, and then we acquired another cohort of six or 10 more of them. And for us that represented an enormous amount of work because we actually built out the initial product for everything, a shop, this hardware that we talked about, servers, everything necessary.

And so, at that point, I had proven to myself that this worked. We had like 20 people that I didn't know using it, and after like six months, most of them were still buying coffee from us. And I looked at the revenue retention and I did a confidence interval because obviously this is a small sample size. I did a confidence interval and at the 99% bottom of that confidence interval, we were still above what I knew to be the revenue retention for a normal subscription. So at that point I said, "Okay, we have something we've proven. Now's the time to go fundraise."

And that was probably the biggest mistake in the history of a company. That set us back quite a while, because it only took maybe a year to do all this hardware, all of the product, one person working on this and getting real customers on board. And then, then getting enough data to show that, yes, without statistically we've proven that this actually works better than the alternatives. So I felt fairly confident. I went out to fundraise and it was complete failure, total utter failure. Nobody took us seriously. That's just the truth. We're just two random people that unpacked together this crazy idea.

And we're sort of going around to Seattle Angels. And while we didn't really understand this, their first thought was, who the hell are you? They see you pop up on a video call or you meet them face to face, and what's going in the back of their mind is, who are you and why should I give you my money? Because Angels, a lot of times they're actually selling some stock and wiring you cash, wiring you cash from the bank account. And so, we had sort of a real immature idea of what fundraising and startup investors actually were like and what it took to get a yes. What it takes to get a yes is many times more than what it takes for you to be confident about it yourself. And that's something that we had to learn.

So I would say there was two lessons from that failure. The first thing is that nobody's going to just trust you. We had 20 customers. They didn't immediately trust that those are real people. I knew that they were real people and they weren't my friends that were just doing it. But these people are highly skeptical. You walk in off the street and you tell them, "Look at this data give me a bunch of money." People are immediately going to sort of be defensive and you really have to prove it beyond the natural doubt that you yourself had. You really cannot project your own psychology onto an investor's psychology. That was one lesson.

The other lesson is who you are to these people matters a lot. And you could almost feel with cold investor leads the people not taking you seriously. I don't know. Maybe it's sort of a crazy analogy, but you're in high school and you're trying to flirt with the hot chick or something, and they just not even interested in talking to you at all. That's what it's like.

Patrick: [00:24:34] That's what it's like?

Michael: [00:24:35] Yeah. That's what it's like as a bootstrapped entrepreneur, very early stage, with just a very initial prototype and some very initial proof, with no real track record or credentials, because I previously had been a developer, but only for a year before quitting and doing this. And we had spent a year building this out, proving to ourselves every single thing, that the product works, that people will actually use it. And we were extremely confident of the idea, but then complete other failure to fundraise. And I kept trying because I really believed, and I kept trying, and it just wouldn't work. I dedicated three, six months saying maybe, just trying to talk to investors and just getting, not just a little bit rejected, but mega rejected, not even close to interested in this. At that point, we almost shut down to be honest. We're like, "Okay, well, do I keep going?" The opportunity costs was pretty large because I had been working as a developer and building up your career as a developer can be fairly lucrative. Just graduated from college and just thinking, okay, what do we do here?

And I actually still remember, Leanna and I, we went on a really long walk, and I thought that the conclusion of the walk was going to be time to shut it down. This has been a fun experiment, but just we couldn't let it go because we had proven to ourselves that I worked beyond any doubt. I could see every day, I could see ordering, I could see the coffee arriving, and people continuing to just use it beyond any reason other than the product actually working for them. So we just decided, okay, well, people don't believe it at 15 customers and 20 customers. We have to get 150. And that's what we did. We turned our apartment into basically an assembly line, cranking out these hardware devices that I was soldering together myself. And we just kept growing the company because at some point, we would get to a revenue level where people actually believed it. And we knew that the customer in the door is going to stick and convert into revenue for a long period of time.

So eventually, after we had considerably more proof, when we tried to fundraise again, we had a lot more success and we had shown a track record of growing for a while and executing for a while. It was obvious that it wasn't just some project. The other thing that was different about that second time was the leads were considerably warmer. And I can talk about that.

Patrick: [00:26:49] Please do. Unique angle. And how we met too, I think.

Michael: [00:26:54] Yeah. So this full-time, I had sort of been tweeting anonymously multiple accounts. I don't know why I did it. I sort of enjoyed it. One account in particular had gotten quite a bit of traction. I really loved the fact that it was anonymous. I didn't want anyone to know who I was and the mystery was who was great for me, as well as other people. Just sort of incidentally, I had accumulated quite a few investors as followers on Twitter. And it was basically just because that's my interest, right? And I'm bootstrapping a company, I'm a developer. I'm very interested in business. So I happened to just hang out in certain circles of the internet. And I had inadvertently built quite a network for myself.

It's sort of like you hear stories of people who are hacking and Silicon Valley in the nineties or whatever, and I have been hacking in the Silicon Valley of the late 2010s without really knowing that that's what I was doing. And Silicon Valley had been uploaded into the cloud already. And all of the investors and all of the entrepreneurs were already online, talking more than they were in person. Can you just imagine one guy in San Francisco and another guy in San Francisco, they're going to be talking more online on Twitter and they're going to be talking actually in person. They might see each other once a month.

I had already been uploaded to cloud and I was already there. And I was already sort of friends with a lot of people. I didn't fully appreciate that. And so, looking to fundraise for a second time, I feel like we had really, really proved it out and anxious to go talk to more people and have them look at me like, who the hell are you? And so I just thought, okay, well let me try with some warm leads. So I just kicked the process off by messaging a few friends, and that process was considerably more successful. Obviously harder, and I still think if I would've tried with those friends the first time that I'd fundraised, I probably still would've failed. It was too early, too small of numbers, not enough proof. So the combination, that's having proved it out five to 10 times more than I needed to convince myself, in addition to having much more warm leads, resulted in a lot more success. So we were able to raise a pre-seed funding after that, tapping the network and having a lot more proof.

Patrick: [00:29:04] I don't know if you remember this, but I tried to get into that round and it moved too fast for me to be able to do it. We hadn't met in person yet, but I was like, "God damn it. I can't believe how quickly that door shut on me." Fascinating that you converted a unique type of social capital, which, look, like your question earlier around, who are you? What would have been maybe different if you had been a Stanford CS major or something like this? And there's just new ways of building social capital and you probably went into the hardest fundraising. I just think that's completely fascinating.

Michael: [00:29:35] It is really fascinating right. After this pre-seed round, we ended up going through Y Combinator. I still remember we were going about the demo day and quite a few of people in Y Combinator MITCS or like early at Stripe, the best credentials in the world, and they have a 2% acceptance rate. I still remember going to demo day and everybody was trying to talk to Gary Tan. And was it Gary? No, it was somebody else, but they just walked up to me and they were like, "Oh, Hey, you're the guy from Twitter with this avatar, aren't you?" And I'm liked, "Yeah." Everybody's trying to talk to this guy and he comes up and talks to me.

And that was probably five to 10 investors like that that already knew me. They knew who I was. They'd been following me for a year or two years or more, and I had occupied some space in their head. And that space was way more important than some abstract. There might be, I don't know how many graduates Stanford has a year, undergrad graduates, what? 5,000 or something. That's a very, very prized token, to be one of those 5,000, essentially, like a credential token.

Patrick: [00:30:35] But that avatar was one.

Michael: [00:30:37] There was only one. There's only one of that account. And people who happened to follow you, they only follow 250 people, 500 people. And so, being one of those 500 is way more important than being a Stanford graduate, Stanford plus Harvard plus Princeton. Maybe there's a hundred thousand of these people that have graduated in the last couple of years. Building your own social network is definitely quite a bit more powerful than I think people understand.

Patrick: [00:31:01] Or just the concept that there's riches and niches. The more narrow your focus, strangely the better you do on the internet. Just the lesson that gets taught over and over.

Michael: [00:31:11] Yeah. There's also a parallel to, we've talked about your success with this podcast. What you've told me is you were just doing it because you enjoyed it. You didn't plan to have this large of an audience. Obviously you do it because you want to build an audience, but you enjoyed it. And likewise, I was tweeting things that I thought were interesting. I was not purposely going out there and saying, "I'm going to build a network, and then I'm going to fundraise from this network." That thought didn't even cross my mind. It was just something that was generated from me.

Patrick: [00:31:36] There's some cool lesson there about people debate should you follow your passion or not? I'm not going to weigh in on the argument, but certainly you should follow your interests. That seems unassailable that it's a really good idea to follow your interests because people like that, people follow that. So good lesson there.

Michael: [00:31:52] Yeah and it's not like I'm tweeting that I was doing was specifically for my own benefit. Once people were following me, I always was trying to tweet something that would improve upon their feed. It's not just passion. It's not like I'm just tweeting haikus that nobody cares about. I was trying to tweet things that people enjoy, and I was trying to provide a service to the network. It's also the story of if you pay out, you'll get payment back in a weird way.

Problem #4: Scaling Production
Patrick: [00:32:16] Good excuse to go to our first, what I'll call, bigger company challenge. This is around ... So you've walked us through the personal hardware journey. Now you have to get to a much bigger hardware journey that involves partners, that involves much larger scale production. This is a whole nightmare in and of itself. Walk us through this problem and how you solved it.

Michael: [00:32:38] Yeah. So this is a graveyard for a lot of companies trying to actually make production hardware. Many just fail at that point. What we did is we never really made the leap of saying, "We're going to make 50,000 units and we're going to do some very serious hardware production." We just solved whatever problem was right in front of us. You asked earlier, how long did it take to make each prototype? A few hours. You just cannot make 1000 of those yourself. You really don't want to have to hire somebody to do it either. It's not going to go very well. And so what we did was each step of the way we just solved the bottleneck.

I described the initial prototype as having been soldered together. It really was like a birds nest of wires. It was absurd. But in doing this, I was aware of the fact that actually putting together the electronics was by far the most time consuming thing. And we did our precinct funding and got into YC, we were really accelerating our growth a lot and it was getting to the point where I just could not physically make these things fast enough, in addition to the other demands that we had. And so we just took our electronics, and that's it. We hired somebody to take the design that we had already and just put it on manufactured board. That's it. Just take this, put it on a manufacturing board. And we kept doing 3D printed shelves. I don't know if anybody's actually done that.

I remember with our Y Combinator interview, we actually brought one of them with us and they were like, "Wait, what is this? This is a 3D printed outside with manufactured inside? What are you doing here?" And we explained to them, "Well, that's our bottleneck right now. We ordered 1000 of these boards to come, and then we just kept assembling them ourselves." Because slapping them together was not that hard, but finding an assembler in China to actually assemble these things, or doing a mold for the plastic, is extremely hard. That's boss level hardware. So just solve our problem. It's a tractable thing that we can solve right now. Just get the electronics done and on a board. So that worked for awhile, we're assembling these. And then eventually we get to the point where the assembly itself was the bottleneck. Then we actually flew to China. We figured out how to do the assembly. We took our 3D print, we turned it into a mold progressed from there.

Patrick: [00:34:49] How do you think about the role of bottlenecks in the future? So it seems like you've gotten better and better at sort of almost leveling up the bottleneck, if that makes sense. If you could think about success in the future being, "Can you arrange an impressive enough array of bottlenecks that you then have to solve," as you get bigger, you have to start thinking further and further out versus just solving the thing directly in front of you. How do you think about that? How do you think about the utility of bottlenecks from what you've learned and how you can apply that to the future of the company?

Michael: [00:35:19] Trying to solve a bottleneck prematurely is a huge mistake, and very tempting. Because it's very scary just solving the problems in front of you. What are we even doing? Do we even have a plan? How are we going to get 100,000 customers? And in the beginning, how are we going to get 1000? We definitely can't be shipping them this janky hardware, and we definitely can't be doing our operational processes manually the way we're doing them now. That's just absurd. And so it can be very scary, but there's massive utility to only solving the bottlenecks right in front of you.

So for example, I had never built hardware before, but I had also never built a server board. I had just been a front end JavaScript developer. I just sort of looked up a tutorial how to build a server, just built something, threw it up to accept the sensor data. I remember distinctly as I was building that and deploying that, thinking to myself, "Okay, well, this is just a prototype." I had to calm myself down. "It's going to be okay. I can redo this in the future. Don't worry about it." And the crazy thing is now we have, what? 10,000 current connections or something, and it's still essentially the same server. And so what I thought was going to break and what I thought needed a lot of thinking and work in fact didn't need any at all. Because the web technology is so good that you can just get something out of the box and it just sort of works for a very, very long time until you get to massive scale. There's a lot of utility in only solving the bottlenecks in front of you, because then you're only working on a real problem. When you're a startup working on a fake problem is deadly.

Problem #5: Organizing Supply
Patrick: [00:36:52] Yeah. I love that concept. And one of the amazing things about watching you guys, and I think I've had a few of the scales now, is we've gotten this whole way but we haven't really even talked about the other problems that are happening concurrent with this, which are things like customer acquisition, supplier acquisition. I think now's a good time to talk about supplier legibility, which is something we've talked about before, you and I, as yet another problem to be knocked down. So all of this has kind of been about getting to the point that you're mass producing these scales that have a useful unit of legibility that you narrowed down at the beginning, cool sequencing we've laid so far. But we haven't talked about coffee or customers or suppliers or the other key parts of this. So let's go there now. What is that problem?

Michael: [00:37:35] Yeah, this is something we sort of took for granted. Because the origin of the whole concept was about my demand not being fully supplied as a consumer of products, and also in various workplaces that I had seen. That also is sort of the end point, the demand of products. I hadn't really considered the supply side of it at all. When we started, we only started in the Seattle area to keep this problem easy, and so we sort of considered it. We said, "Okay, well we don't know how the shipping's going to work across the country. Let's just do it only in scale." And so we put in a fixed delivery time. It's going to take two days, baked that into the system.

What we found was people started signing up all over the country. And we found that this supplier legibility was equally as important as the demand legibility. And when you step back and think about it, it's just obvious. If you're trying to solve the problem of getting something there on time before you run out, how long it's going to take to get there is incredibly important. The actual process of getting it to somebody, especially when it's something like freshly roasted coffee, involves the production timelines with the stuffers, it involves their USPS or FedEx pickup performance and timelines, and then it involves the actual shipping all the way through all of the different problems that can happen. Man, it's been a real nightmare through COVID dealing with all of the problems with the USPS house.

And so what we found ourselves working a lot on is just how can we model the time it's going to take for product to actually get to you? How can we know it's probably going to arrive on day three or four versus seven, or two? If it's going to be seven and we have a fixed constant of two in the model, we're always going to be late, and vice versa. That's been a huge component of our actual work, and something that a lot of e-commerce companies don't really think about. If you sort of re-invent e-commerce from the ground up and from some separate principle, like we're doing with Bottomless, which is that we're actually going to satisfy your demand always, constantly and forever.

You start to think about problems that nobody's considered, which is how long does it actually take? And I've had a lot of experiences with other e-commerce providers where I buy something and it just never shows up, and they don't even tell you. Once the sale happens, they don't even care. It's out the door for us. And so we've had to solve a lot of problems, which we probably have one of the best USPS modeling services in the country when you think about it, because not very many people are even considering this. Certainly top 10, because I doubt more than five major tech companies are actually even solving the problem. There's a lot of other sides of legibility that we found ourselves having to address.

Patrick: [00:40:14] Can you go deeper on that one? So I'm really fascinated by the work you guys have done here. And yet again, it was a bottleneck. COVID created strange things, the storm in Austin created strange things. There's always unexpected problems. It's like the rule of the universe, and you have to solve around them. So how did you first approach this? I think you've described to me literally watching packages, take the same package from the same place to the same destination, taking different routes through the postal system. Literally watching it visually. Tell me about how you began to understand this problem of USPS predictability as an input to your product.

Michael: [00:40:49] Well, the first thing we tried to do is just take USPS's word for it. They tell you, oh, this is going to take two days or three days or four days. And when you buy a shipping label, you can get back to that estimate. So we said, "Okay, let's take their word for it." And it turns out they have no idea. And since then, we've worked on models, do this. And the USPS estimate is like the fifth most important parameter. It's not even close. We found some extremely interesting things. What's one that I could share? The income of the zip code, where the coffee's going to. It's highly predictive of how long it's going to take. And the question is whether that high incomes are better or low incomes are better. Because you can tell you their story, and the model we use doesn't happen to tell a causal story. I don't know about causal, but it doesn't say which way the correlation goes. It just gives you importance of the features. Maybe it's a labor market problem. In high income areas, they have a hard time staffing the USPS, or the worst case of this story is that poor areas of the country that are not served very well. I don't know.

So USPS modeling is one thing we did. But the other thing we did is we started very early, actually clicking through all of our orders in progress to make sure that they weren't getting stuck. Because USPS is fairly inconsistent, but it's also the best from a product perspective for customers, because it actually rides into your mailbox. They have mailbox access. So there's really no problem for the consumer to get a door tag from FedEx. We always wanted to avoid, we want it to be seamless. So we decided we're using USPS, we have to figure this out. We need a portal with every order in progress, and we would go through every single day and click them. And so that's another scaling story. Eventually, you can't do that anymore. And it becomes totally impossible to actually manually track them, unless you hire a team to track orders. We've actually built out a custom system for tracking orders as they're moving through the postal service. Again, another basic building block for e-commerce that's probably should exist. If you buy a shoe from Nike, they should actually tell you if your shoe is delayed. And it's not necessarily if it's delayed, but they should know, "Okay, if it's delayed three days at this step specifically, that it's unlikely to be delivered and send you a replacement." But nobody does that. We had to actually do this because it's the way our model works and the promise that we made to the customers.

Patrick: [00:43:04] I love the idea of bottomless web services or something, all this crap that you've had to build just because your problem is unique. The founder CEO of Carvana said something to me recently. I asked him a question, something like, "How can you stay focused on the same problem for so long?" They sell cars. How do you keep this interesting? And he said something like, "The best, most interesting problems are just fractal. The more you zoom in on them, you just keep finding problems to solve. You can zoom in, zoom out, doesn't matter. There's just constantly new levels of depth and detail with new kinds of problems as you scale," and that's basically kind of what you're describing. This restocking problem that we started our conversation with is a fractal problem. There's probably no end to stuff you can solve. Do you feel that way?

Michael: [00:43:50] Oh yeah. I'm actually extremely excited about the future of the company because there's many, many different types of demands. Whether it's in consumers, households, or businesses, many different types of sensors we could use to get a source of truth of how much you have. Each of those is going to present its own problem sense, and many different types of suppliers. USPS is one type of supplier. There's many, many different types of suppliers that each have their own, I guess you could say, typologies.

And so the problem itself expands, but also it is fractal. Just knowing for sure what's going on with every customer's scale. What does their demand look like right now, is a problem that just, we keep solving it at more and more depth. Are you somebody who's putting coffee in a hopper or are you somebody who is using it everyday? Likewise, the supply problem that I talked about, currently we're sort of modeling it as a full spectrum thing, from supplier all the way to arrival. But we could be modeling it in a bunch of different ways, modeling each discreet step and learning a lot more about what it looks like for this pickup.

Speaking of things that we do that it's crazy, we actually are monitoring that the coffee's picked up and every seller every day, and we know what time they typically pick up because it doesn't happen. Then we call them and we say, "Hey, where's the coffee?" So it's sort of like an infinitely large problem set, and the problem for us is to continually narrow our wedge and just make the best possible product right now for consumer coffee subscriptions. Even though I would love to solve, I don't know, oat supply for your local granola company or something.

Problem #n+1: Hiring & Personal Development
Patrick: [00:45:27] I think the one point for me that's really important when we were looking at investing in the company, you talked to one of our best data scientists, because this is just something we're really good at underwriting. We do it all the time. And he said something interesting, which is nowhere in their materials does it say Bottomless is an AI company. They're doing more data science in productive ways than most companies that are AI companies. This is a problem solving question. Like, "Oh well, the way you solve that is build a model for it and click, what else are you going to do?" I love that as an example for people building out. They're like, don't talk about the means. Think about the end that you're trying to accomplish, and just crash through bottlenecks over and over and over again. You can build something powerful.

There's a couple more closing questions I have for you. We'll call it two more growing pains. The first is hiring. So hiring is a problem for everybody right now in the technology space. Literally everybody. I think you could build the world's best VC if all you did was somehow the supply of engineers and talent that actually went to workplaces. Talk me through your experience of this, because it seems like it's the number one problem is building a great team. How do you think about it as a current challenge?

Michael: [00:46:37] Well, I can say that's one of the hidden advantages of doing a consumer company and doing something interesting. We recently made a pretty important hire for the company, and she had originally heard about us from our podcast two years ago. Secretly, in the back of my mind right now I'm trying frame the hiring-

Patrick: [00:46:52] Accept would be Bottomless partners.

Michael: [00:46:55] In a way that we don't have a hiring problem because everybody should want to work at Bottomless. Going back to the concept of legibility, hiring really is a legibility problem. You really don't know. And the indicators that you have are very poor. There's no source of truth like you have with the scale with coffee on the scale of how well somebody is going to gel with your team or how well they're going to perform when they come on board.

What I can say about hiring is that we've done it very poorly in the beginning for a little while. We've gotten much better at it. What we've done is we've set up processes. So first we have a screener and then we do an interview and we give an actual score after the interview and then somebody else does an interview and they give an actual score after that interview, and then a work sample that's similar to what the people are actually going to do. And you can find all of these I'm sure by watching Harvard Business School lectures or whatever. But I guess our nature is to rediscover things on our own. We've learned that following a rigorous process and putting scores specifically at each step, and having a threshold that somebody has to pass is very helpful, and being very sure.

Because it's very easy to make decisions emotionally, when you're trying to make a decision, the mind usually goes back to an easier version of the decision. You don't actually solve the problem if it's too hard. You substitute an easier problem. Is this person going to be a great engineer on our team? You may substitute the problem of like, do I personally like this person? That's a much easier answer to solve. And you say yes or no, and then you hire the person and it may not work out. We've just made the process much more rigorous. We regularly get multiple cold applications every day. You can almost tell by the way I'm describing it more as a sorting problem, decision-making problem than a top of funnel problem, which I know that happens to be problem for other people.

Another thing that I would say is we've sort of discovered the power of remote international work. And I actually predict that in 10 years, this is going to be a trend that people are talking about, but it's just a little bit too nascent. We discovered it by accident. We had a friend who was doing a company sourcing international engineers. I didn't really want to do it. I was like really cold on the idea, but my co-founder, Liana, said, "Let's just take the energies because there are interviews. Let's just do it. Maybe it'll be good experience for us." And we eventually found somebody great and hired them. And we were just blown away. Like this guy was actually like one of the best engineers or perhaps the best engineer I've ever worked with.

That was like sort of an epiphany, which is that talent may not be evenly distributed, but opportunity is less evenly distributed than talent. So you have incredibly talented people working in roles that are incredibly unsatisfying for them around the world, because the opportunities are just not the same as for us here in the US, in particular up and down the West Coast or in New York or in tech centers. It doesn't even look closely, like there might only be 50 people employed in interesting startups in some countries. Whereas in the US we have like what? 10,000 venture backed startups running at any given time. And so, I still believe that U`S is probably the center of the most amount of talent in the world, but the opportunity is so rich. It's so opportunity rich for people that you can really find a lot of talent out there that is interested in finding a better opportunity and almost any sort of tech company or startup in the US is probably going to be an attractive opportunity for those people.

Patrick: [00:50:15] You and I were talking about this concept of a snake shedding its skin, and that through each bottleneck, a new layer of skin gets formed. My last question is how that happens at a personal level. So when you were telling us the great story about the early scales and smoke coming out of your ears and solving this stuff hands-on, that changes as the company grows. How have you solved that skin shedding problem? Like what have you learned about the personal bottlenecks and evolution and scaling that has to happen alongside the companies?

Michael: [00:50:48] I don't see it talked a lot about by people who are startup founders, but quite frankly, like my personal performance as a founder was not up to the standard necessary almost at every step of the way. Once we were hiring people, I would say that I did not have the management skills or the time management skills, which I had been a successful employee at a company before, but time management skills and productivity skills required to both manage people and contribute, which is necessary in an early stage startup, we're sort of lacking. And that's something that's been sort of painfully clear to me at every single step of the way and continues to be.

As a pre-seed founder, I was always thinking to myself, okay, well, I'm probably not where I need to be, to be a good seed founder. And then after we raised our seed, I was always thinking to myself, okay, well, I'm not there yet to be a venture scale founder. It's sort of always been a painful process. Every step of the way. I highly recommend doing a startup to people who are interested in personal growth, because it sort of pulls it out of you. I'm like a dramatically more productive person and better at time management than I was like three years ago. And it's through a continual process of frankly just not being good enough. And the idea that we're working on, the company that we're building and the people that we're working with now are good enough that it keeps pushing the company forward. And it keeps pulling more from me and requiring me to step up. It's sort of like an interesting process. It is like shedding your skin. And I don't know if shedding skin is painful for snakes, but it's like shedding skin in a somewhat painful way.

Patrick: [00:52:22] If you think about a person as like stuff that goes in, inputs, behaviors, and outputs, just like oversimplifying, have you learned anything in those three areas that you think has helped in that process?

Michael: [00:52:35] Well, I remember talking about this a little bit in our first podcast. And so, it was an epiphany that I had a really long time ago, which is that any information that you put into your mind is going to generate thoughts and the thoughts that occur to you are basically automatic. You don't decide that you're going to be thinking about Notre Dame basketball. In particular, if you're not actually interested in that, just because you saw it on sports center.

But I guarantee you, if you're watching sports center, you may find, and you take a shower afterwards, you may find yourself thinking about Notre Dame basketball, if that was on TV. And it was not a conscious decision. I remember having that happen once. And I think perhaps it was like when we went through this first, very painful process of failing to raise our first attempt at a pre-seed and really being at this point in the company, and in frankly in my life where I had to sort of like step up or not, I remember taking a shower and thinking about something utterly trivial. And I was like extremely motivated to like make shit happen in my life. And I was thinking about something that was totally unrelated. Frankly, that I don't even want to have an epiphany about. It's probably embarrassing. I told my friends like what I was thinking about.

And I thought to myself, wow, like that just can't be happening if I'm going to perform at the level that I want to be performing at. And then I remember I realized that a long time ago, and it's been sort of a difficult process of actually implementing that. And over time, I've slowly peeled off sources of information and it's difficult because we're all addicted to information. You wake up, you're looking at your phone. In particular, probably the listeners to your podcast, always listening to podcasts, always reading Twitter, always consuming news, maybe sports. It doesn't really matter what it is, but every single thing that you're putting into your mind is liable to be generating the stuff in your thoughts. And all you can really do consciously is pick from those thoughts. Say, no, I'm not going to think about that.

But if it's just constantly generating unproductive things for yourself personally, or this isn't even about productivity. It's just generating thoughts that are not going to enrich your mind or make you a smarter person or build better mental models, you're really going to struggle to achieve what you're going to want to achieve. So for me, probably the highest ROI thing that I've done is slowly peel out. First, I stopped watching sports of any kinds. Then I stopped reading news. More recently, even I stopped reading my Twitter feed, which has been an extremely difficult thing, and I'll probably go back, but I found myself to be dramatically more focused what I'm trying to do in my life.

If all I consume is information related to my life or I'm reading books about machine learning or entertaining books like shoe dog about building a business, I'm still sitting there in the shower thinking about what is required to build a startup. I'm just having random daydreams that are still tangentially related to the things I want to be thinking about. So one thing I would say is, I think there's a lack of an awareness about this because we've had such an explosion in information technology, the amount of information that you can just like wash your mind in, it's just unbelievable now. In particular, if you're a very curious person, you probably have found yourself with habits that are essentially bingeing non-stop on information. Probably at least for me, the best thing I could do was start pulling out things that are not the type of information that I want to be building blocks of my thoughts or my mental life.

Patrick: [00:55:58] So if we call this episode business boss battles or something like that, any closing thoughts beyond some of the awesome lessons. Like I'll remember, don't solve fake problems, focus on the bottleneck right in front of you, treat things like software, iterate your way through problems, combine old pieces of technology. It's like that Nintendo story, new products with withered technology or something, all these kinds of cool lessons that have come from the five or six boss battles we've talked about. Any closing thoughts on business boss battles for those listening?

Michael: [00:56:26] Maybe less of a closing thought, but something that occurs to me is that I still remember the feeling in the very early days since this is really about the early days. I remember the feeling of quitting my job. I'd been a JavaScript developer and I quit my job to do this company and the way distant friends and family, not close friends and family, but sort of like acquaintances. It was like I was unemployed and working on some like crazy thing that was just like ridiculous.

And so, I took a very severe status hit. As a developer, as like early 20s or mid 20s person as a JavaScript developer, I was doing quite well for myself to sort of quit that, to be working on a totally unfunded concept was a huge status. Now that it's been somewhat of a success, it's quite status enhancing. Here I am talking on this podcast. People aren't listening to me like I'm some sort of authority. I seem to be somebody with a decent amount of status, but I had to have fairly low tolerance or low sensitivity to status in order to even do it, to begin with. If I would have been highly sensitive to what other people think of me or what my status was perceived to be, it would have been intolerable. And I remember it feeling very difficult at the time in the beginning and having to consciously ignore it. So that's another lesson.

Patrick: [00:57:38] Do you think it's dangerous that that seems to have changed? There's so much funding. It's so easy now, even relative to when you did it. Much easier now to get funding, even as an idea and a PowerPoint again, that it almost seems like even CEOs of companies that were incorporated last week, they don't take that status hit. Like it seems to have become something high status to do. Do you think that that's a good thing or a bad thing?

Michael: [00:58:00] I don't think it's high status. The perception of it being high status and it just working very quickly for people is only happening for a very narrow subset of the population. And those people are already fairly high status. You're a CS graduate from Stanford. You're very high status to begin with and you can go get a really high status job. And being a startup founder with no funding, it's still going to be less status most likely than your alternatives. And so maybe if you go hold until I see straight from a high status job and you go into YC and then you go out and you get funding, it's status enhancing. I think most people who start companies, it is not a status enhancing thing to do compared to their alternatives. And yeah, maybe you could get funding really fast, but it probably isn't the case. We see a lot of news of people just starting a company and immediately getting a $5 million seed or $10 million seed.

But if you're the type of person who's going to start a company and people are going to throw cash at you, you probably already have quite a bit of social capital. I would say on net, and this is just me speculating. I think it's a good thing. I honestly think starting companies and taking that risk and trying to build something new should be high status. The alternative status markers that we have for the type of people that are starting companies are generally less productive for the world because starting a company is very high risk thing to do. Even at this stage for Bottomless, I think we're going to be successful. All signs are pointing in the right direction, but it's still a very risky endeavor. And in the very beginning, it's extremely risky. You want to somehow subsidize that risk. I think society seeing entrepreneurship as a high status thing is good. And I think it actually should continue even more in that direction. I think people should be even more high status for taking the leap, building something themselves, and trying to prove out some business idea. And that should be higher status than being a junior investment banker at Goldman Sachs.

Patrick: [00:59:44] If we do this again in a year, what bottlenecks do you think we'll talk about?

Michael: [00:59:50] Scaling the organization when you're two founders, like we are right now, you can sort of manage five people, 10 people, but once you have 20 people, 30 people, you have to be able to scale and you have to be able to delegate and you have to really divorce yourself from the actual process. So right now, maybe not myself, but my co-founder Liana is a very good executer. And so. she actually goes into everything that's happening and she's always making sure everything's going well. Every customer is having a great experience. And at a certain level, it just can happen. And you have to have some organizational processes beyond organizational desires, right? For things to go well, because desire just doesn't scale. I would say that we're already hitting the beginning of those growing pains and I don't project them to get easier. They're only going to get harder from here.

Patrick: [01:00:34] Awesome. This is such a fun format. I think I might do this with others. Line them up, knock them down. Problems faced in building something unique and with a cool problem space. You did a good job making this distinct from the first. I really appreciate your time. So fun as always to chat with you. Thank you.

Michael: [01:00:50] Thank you.

This site uses cookies to improve your browsing experience. By using this site, you are consenting to this policy.
